{"ast":null,"code":"var _jsxFileName = \"/Users/amakamba/Documents/GitHub/react_weather_project/src/WeatherForecastDay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecastDay(props) {\n  function maxTemperature() {\n    let temperature = Math.round(props.data.temperature.maximum);\n    return `${temperature}`;\n  }\n  function minTemperature() {\n    let temperature = Math.round(props.data.temperature.minimum);\n    return `${temperature}`;\n  }\n  function day() {\n    let date = new Date(props.data.time * 1000);\n    let day = Dadatete.getDay();\n    let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n    return days[day];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast-day\",\n      children: day()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.data.condition.icon_url,\n      alt: props.data.condition.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast-temperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"WeatherForecast-temperature-max\",\n        children: [maxTemperature(), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"WeatherForecast-temperature-min\",\n        children: [minTemperature(), \"\\xB0\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = WeatherForecastDay;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecastDay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherForecastDay","props","maxTemperature","temperature","Math","round","data","maximum","minTemperature","minimum","day","date","Date","time","Dadatete","getDay","days","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","condition","icon_url","alt","description","_c","$RefreshReg$"],"sources":["/Users/amakamba/Documents/GitHub/react_weather_project/src/WeatherForecastDay.js"],"sourcesContent":["import React from \"react\";\n\n\nexport default function WeatherForecastDay(props){\n    function maxTemperature(){\n        let temperature = Math.round(props.data.temperature.maximum);\n        return `${temperature}`;\n    }\n\n    function minTemperature(){\n        let temperature = Math.round(props.data.temperature.minimum);\n        return `${temperature}`;\n    }\n\n    function day(){\n        let date = new Date(props.data.time*1000);\n        let day = Dadatete.getDay();\n        let days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sun\"];\n\n        return days[day];\n    }\n\n\n    return(\n        <div>\n             <div className=\"WeatherForecast-day\">\n                        {day()}\n                        </div>\n                        <img src={props.data.condition.icon_url} alt={props.data.condition.description}/>\n\n                        <div className=\"WeatherForecast-temperature\"> \n                            <span className=\"WeatherForecast-temperature-max\">{maxTemperature()}°</span>\n                            <span className=\"WeatherForecast-temperature-min\">{minTemperature()}°°</span>\n                            \n                        </div>\n        </div>\n\n    )\n\n\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAC;EAC7C,SAASC,cAAcA,CAAA,EAAE;IACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,IAAI,CAACH,WAAW,CAACI,OAAO,CAAC;IAC5D,OAAO,GAAGJ,WAAW,EAAE;EAC3B;EAEA,SAASK,cAAcA,CAAA,EAAE;IACrB,IAAIL,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,IAAI,CAACH,WAAW,CAACM,OAAO,CAAC;IAC5D,OAAO,GAAGN,WAAW,EAAE;EAC3B;EAEA,SAASO,GAAGA,CAAA,EAAE;IACV,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACX,KAAK,CAACK,IAAI,CAACO,IAAI,GAAC,IAAI,CAAC;IACzC,IAAIH,GAAG,GAAGI,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC3B,IAAIC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,KAAK,CAAC;IAE3D,OAAOA,IAAI,CAACN,GAAG,CAAC;EACpB;EAGA,oBACIX,OAAA;IAAAkB,QAAA,gBACKlB,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EACxBP,GAAG,CAAC;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA;MAAKwB,GAAG,EAAEtB,KAAK,CAACK,IAAI,CAACkB,SAAS,CAACC,QAAS;MAACC,GAAG,EAAEzB,KAAK,CAACK,IAAI,CAACkB,SAAS,CAACG;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEjFvB,OAAA;MAAKmB,SAAS,EAAC,6BAA6B;MAAAD,QAAA,gBACxClB,OAAA;QAAMmB,SAAS,EAAC,iCAAiC;QAAAD,QAAA,GAAEf,cAAc,CAAC,CAAC,EAAC,MAAC;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5EvB,OAAA;QAAMmB,SAAS,EAAC,iCAAiC;QAAAD,QAAA,GAAET,cAAc,CAAC,CAAC,EAAC,UAAE;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAKd;AAACM,EAAA,GArCuB5B,kBAAkB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}